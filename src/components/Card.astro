---
import { Icon } from "astro-icon/components";

export interface Props {
  title: string;
  body?: string | null;
  stack?: string[];
  links?: { type: string; href: string }[];
  date?: string;
  extraInformation?: string;
  isArchived?: boolean;
  isContributor?: boolean;
}

const {
  title,
  body,
  stack,
  links,
  date,
  extraInformation,
  isArchived,
  isContributor = false,
} = Astro.props;
---

<div class="bg-slate-100 bg-opacity-40 dark:bg-zinc-800/40 rounded-xl p-5 mt-5">
  <div class="flex items-center gap-2">
    <h3 class="dark:text-neutral-50 font-semibold text-lg capitalize">
      {title}
    </h3>
    {
      isArchived && (
        <span class="dark:text-[#d29922] text-[#71530E] p-1 h-6 flex items-center rounded-full border dark:border-[#d29922] border-[#71530E] text-xs">
          archived
        </span>
      )
    }
    {
      isContributor && (
        <span class="dark:text-green-400 text-green-700 p-1 h-6 flex items-center rounded-full border dark:border-green-400 border-green-700 text-xs">
          contributor
        </span>
      )
    }
  </div>
  {
    body && (
      <p class="leading-[28px] md:line-clamp-none line-clamp-3 dark:text-neutral-300">
        {body}
      </p>
    )
  }
  <section class="flex justify-between items-center flex-row-reverse">
    {
      date && (
        <p class="flex justify-end mt-3 dark:text-neutral-400 text-slate-800">
          {date}
        </p>
      )
    }
    {
      extraInformation && (
        <p class="flex justify-end mt-3 dark:text-neutral-400 text-slate-800">
          {extraInformation}
        </p>
      )
    }
  </section>
  {
    (stack || links) && (
      <section class="flex flex-row flex-wrap gap-3 mt-5">
        {stack && (
          <div class="flex flex-row gap-3 flex-wrap">
            {stack.map((tech) => {
              return (
                <p class="rounded-lg px-3 py-2 dark:bg-zinc-800/70 bg-slate-200 w-fit text-sm">
                  {tech}
                </p>
              );
            })}
          </div>
        )}
        {links && (
          <section class="flex flex-row ml-auto gap-3">
            {links.map((link) => {
              return (
                link.href && (
                  <a
                    href={link.href}
                    aria-label={link.type.toUpperCase()}
                    target="_blank"
                    class="rounded-lg px-3 py-2 m-auto dark:bg-zinc-800 bg-slate-200 hover:animate-pulse"
                  >
                    <Icon name={link.type} />
                  </a>
                )
              );
            })}
          </section>
        )}
      </section>
    )
  }
</div>
